name: Deploy Online Store

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Node.js for frontend build
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      # 3Ô∏è‚É£ Build React frontend with environment variables
      - name: Build React frontend
        working-directory: frontend
        env:
          REACT_APP_BASE_URL: ${{ secrets.REACT_APP_BASE_URL }}
          REACT_APP_HIT_TAG_ID: ${{ secrets.REACT_APP_HIT_TAG_ID }}
          REACT_APP_CDEK_API_KEY: ${{ secrets.REACT_APP_CDEK_API_KEY }}
          REACT_APP_CDEK_SERVICE_PATH: ${{ secrets.REACT_APP_CDEK_SERVICE_PATH }}
        run: |
          echo "‚öôÔ∏è Building React app..."
          npm ci
          npm run build

      # 4Ô∏è‚É£ Copy build files to the remote server
      - name: Copy frontend build to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: "frontend/build/*"
          target: "/var/www/online-store/html/"
          strip_components: 2

      # 5Ô∏è‚É£ Update backend and restart services on the server
      - name: Run backend update on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            set -e  # Stop execution if any command fails
            echo "üåÄ Updating backend on server..."

            cd ~/online-store/backend

            echo "üì• Fetching latest code..."
            git fetch origin main
            git reset --hard origin/main

            echo "üêç Activating virtual environment..."
            source venv/bin/activate

            echo "üì¶ Installing Python dependencies..."
            pip install -r requirements.txt

            echo "‚öôÔ∏è Running migrations and collecting static files..."
            cd ~/online-store/backend/project
            python manage.py migrate --noinput
            python manage.py collectstatic --noinput

            echo "üîÅ Restarting services..."
            sudo systemctl daemon-reload
            sudo systemctl restart gunicorn
            sudo systemctl restart nginx

            echo "‚úÖ Deployment completed successfully!"
